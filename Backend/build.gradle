plugins {
    id 'java'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow'
}

sourceCompatibility = JavaVersion.VERSION_13
targetCompatibility = JavaVersion.VERSION_13

group 'city.guide'

dependencies {

    implementation project(':DataCollector')
    implementation project(':DataStorage')
    implementation project(':GeoCoder')
    implementation project(':TelegramBot')

    implementation 'org.springframework:spring-context'
    implementation 'ch.qos.logback:logback-classic'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation group: 'org.assertj', name: 'assertj-core'
}

shadowJar {
  mergeServiceFiles()
}

task shadowJarShowPlaceCollector(type: Jar, dependsOn: shadowJar) {
    archiveBaseName.set('showplace-collector-service')
    archiveVersion.set('0.1')
    archiveClassifier.set('')
    manifest {
        attributes 'Main-Class': 'cityguide.backend.ShowPlaceDataCollector'
    }
    from zipTree(shadowJar.archivePath)
}

task shadowJarGeoDataCollerctor(type: Jar, dependsOn: shadowJar) {
    archiveBaseName.set('geodata-collector-service')
    archiveVersion.set('0.1')
    archiveClassifier.set('')
    manifest {
        attributes 'Main-Class': 'cityguide.backend.GeoDataCollector'
    }
    from zipTree(shadowJar.archivePath)
}

task shadowJarTelegramBot(type: Jar, dependsOn: shadowJar) {
    archiveBaseName.set('telegrambot-service')
    archiveVersion.set('0.1')
    archiveClassifier.set('')
    manifest {
        attributes 'Main-Class': 'cityguide.backend.TelegramBot'
    }
    from zipTree(shadowJar.archivePath)
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

check.dependsOn jacocoTestReport
