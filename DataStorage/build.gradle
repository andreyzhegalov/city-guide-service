plugins {
    id 'war'
    id 'jacoco'
}

sourceCompatibility = JavaVersion.VERSION_13
targetCompatibility = JavaVersion.VERSION_13

group 'city.guide'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-websocket")
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    implementation 'ch.qos.logback:logback-classic'
    implementation 'ch.qos.logback:logback-core'

    implementation("org.mongodb:mongodb-driver-core:${Versions.mongodb}")
    implementation("org.mongodb:bson:${Versions.mongodb}")
    implementation("org.mongodb:mongodb-driver:${Versions.mongodb}")

    implementation("com.fasterxml.jackson.core:jackson-databind")

    // implementation 'org.springframework:spring-context'
    // implementation 'org.springframework:spring-webmvc'
    // implementation 'org.springframework:spring-web'
    providedCompile 'javax.servlet:javax.servlet-api'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.testcontainers:testcontainers:1.14.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation group: 'org.assertj', name: 'assertj-core'
    testImplementation("org.mockito:mockito-junit-jupiter")

    testCompile ("org.hamcrest:hamcrest-core")
    testCompile ("org.springframework:spring-test")
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

check.dependsOn jacocoTestReport
